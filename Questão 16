#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int RandomInteger(int a, int b)
{
    int k;
    srand( (unsigned)time(NULL) );
    k = (rand() % b) + a;
    return k;
}

void bSort (int v[], int n) {
    int a, b, aux;
    for (a=n-1; a>=1; a--) {
        for (b=0; b<a; b++) {
            if (v[b]>v[b+1]) {
                aux = v[b];
                v[b] = v[b+1];
                v[b+1] = aux;
            }
        }
    }
}

int main(){
 clock_t t; //variável para armazenar tempo
 int vetor[10000], n = 10000; //vetor com 10000 posições para testar, se for menor, mais rápida será a ordenação e menor será a diferença
 int p, r, a;
 p = 0;
 r = n;

  //geração aleatório dos valores do vetor
 for(a = 0; a < n; a++)
  vetor[a] = RandomInteger(0, n);

    //Verificando tempo de execução do bubble sort = t
 t = clock(); //armazena tempo
 bSort(vetor,n);
 t = clock() - t; //tempo final - tempo inicial

 //imprime o tempo na tela
 printf("Tempo de execucao: %lf", ((double)t)/((CLOCKS_PER_SEC/1000)));
}
